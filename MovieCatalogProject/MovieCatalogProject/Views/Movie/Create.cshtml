@model MovieCatalogProject.ViewModels.CreateMovieViewModel
@using MovieCatalogProject.Models;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SelectListItem[] categories = ViewBag.Categories;
    SelectListItem[] castsTypes = ViewBag.CastsTypes;
    List<CastViewModel> casts = new List<CastViewModel>();

    casts.Add(new CastViewModel());
    CastViewModel cast = new CastViewModel();
    string addCastControl = string.Empty;
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<h2>Create</h2>
<link href="~/Content/Site.css" rel="stylesheet" />
<div class="row">
    <div class="col col-md-8 ">
        @using (Html.BeginForm("Create", "Movie", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="panel panel-primary  bg ">
                <div class="panel-heading">
                    <h3 class="panel-title">Dodaj film</h3>
                </div>
                <div class="panel-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.Description, 5, 20, new { @class = "form-control width-100" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-md-6">Plakat</div>
                        <div class="col-md-6">
                            <input type="file" name="poster" id="poster" class="form-control" />
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductionYear, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ProductionYear, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductionYear, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Category, categories, new { @class = "form-control" })
                        </div>

                    </div>





                </div>
            </div>
            <p></p>
            <div id="info" class="form-group"></div>
        }
        <div class="panel panel-primary  bg">
            <div class="panel-heading">
                <h3 class="panel-title">Dodaj członka zespołu</h3>
            </div>
            <div class="panel-body">
                <form action="SendCast" method="post" id="form">
                    <div id="content">
                        <div class="row" id="addCast">
                            <hr />
                            <div class="form-group">
                                <div class="control-label col-md-6">Rola w filmie</div>
                                <div class="col col-md-6">@Html.DropDownList("cast.CastTypeId", castsTypes, new { @class = "form-control", id = "ddlCasts" })</div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-6">Imię</div>
                                <div class="col col-md-6">@Html.TextBox("cast.FirstName", cast.FirstName, new { @class = "form-control", id = "tbFirst" })</div>
                            </div>
                            <div class="form-group">
                                <div class="control-label col-md-6">Nazwisko</div>
                                <div class="col col-md-6">@Html.TextBox("cast.LastName", cast.LastName, new { @class = "form-control ", id = "tbLast" })</div>
                            </div>

                        </div>

                    </div>

                    <input type="submit" value="Dodaj członka obsady filmu" class="btn btn-default" />

                </form>

            </div>

        </div>
    </div>
</div>




<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">

    $(document).ready(function () {
        $("#form").submit(function (e) {
            var loader = $("#loader");
            var info = $("#info");
            var info1 = $("#info1");
            var info2 = $("#info2");
            var form = $(this);
            $.ajax({
                url: "SendCast",
                dataType: "JSON",
                type: "post",
                data: form.serialize(),
                beforeSend: function () {
                    info.hide();
                    loader.show();
                },
                success: function (obj) {
                    var jsonObj = eval("(" + obj + ")");
                    var content =
                    "<div class=\"panel panel-primary\"><div class=\"panel-heading\">Obsada filmu</div> <div class=\"panel-body\">  <table class=\"table table-striped\">" +
                    "<tr><th>Rola w filmie</th>" +
                    "<th>Imię</th>" +
                    "<th>Nazwisko<th></tr>";
                    for (var i = 0; i < jsonObj.Casts.length; i++) {
                        content += "<tr><td><select class=\"form-control\" id=\"Cast[" + i + "].CastTypeId\" name=\"Cast[" + i + "].CastTypeId\">";

                        for (var j = 0; j < 3; j++) {
                            if (j + 1 == jsonObj.Casts[i].CastTypeId) {
                                content += "<option selected=\"true\" value=\"" + jsonObj.CastTypes[j].Value + "\">" + jsonObj.CastTypes[j].Text + "<\option>";
                            }
                            else {
                                content += "<option value=\"" + jsonObj.CastTypes[j].Value + "\">" + jsonObj.CastTypes[j].Text + "<\option>";
                            }
                        }
                        content += "</select></td>" +
                        "<td><input type=\"text\" id=\"Cast[" + i + "].FirstName\" name=\"Cast[" + i + "].Person.FirstName\" value=\"" + jsonObj.Casts[i].FirstName + "\"/></td>" +
                        "<td><input type=\"text\" id=\"Cast[" + i + "].LastName\" name=\"Cast[" + i + "].Person.LastName\" value=\"" + jsonObj.Casts[i].LastName + "\"/><td></tr>";
                    }
                    content += "</table></div></div>";
                    info.html(
                        content
                        );


                },
                error: function () {
                    info.addClass("error").removeClass("ok").html("Przepraszamy, ale wystąpił błąd podczas wysyłania informacji.")
                },
                complete: function () {
                    loader.hide();
                    info.show();
                }
            });
            e.preventDefault();
        })
    })
</script>